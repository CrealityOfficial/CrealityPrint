set(PROJECT_VENDOR "Creality")
IF (CMAKE_BUILD_TYPE MATCHES "Release")
  set(DESKTOP_LINK_NAME "Creality Print")
  string(REPLACE " " "_" CPACK_FILE_NAME_NO_SPACES "${DESKTOP_LINK_NAME}")
  macro(prepareNSIS_Link linkName appName params)
    #prepare start menu links
    LIST(APPEND CPACK_NSIS_CREATE_ICONS_EXTRA " CreateShortCut '$SMPROGRAMS\\\\$STARTMENU_FOLDER\\\\${linkName}.lnk' '$INSTDIR\\\\${appName}.exe' '${params}'")
    LIST(APPEND CPACK_NSIS_DELETE_ICONS_EXTRA " Delete '$SMPROGRAMS\\\\$START_MENU\\\\${linkName}.lnk'")

    #prepare desktop links
    LIST(APPEND CPACK_NSIS_CREATE_ICONS_EXTRA " CreateShortCut '$DESKTOP\\\\${linkName}.lnk' '$INSTDIR\\\\${appName}.exe' '${params}'")
    LIST(APPEND CPACK_NSIS_DELETE_ICONS_EXTRA " Delete '$DESKTOP\\\\${linkName}.lnk'")

    SET(CPACK_SOFEWARE_PROCESS_NAME "${appName}.exe")
    LIST(APPEND CPACK_ONINIT_DELETE_DESTOP_LINK "Delete '$DESKTOP\\\\${linkName}.lnk'")
  endmacro()

  #option(PROJECT_VERSION_MAJOR "option for version major" 0)
  #option(PROJECT_VERSION_MINOR "option for version minor" 0)
  #option(PROJECT_VERSION_PATCH "option for patch" 1)
  #option(PROJECT_BUILD_ID "option for build" 1)
  #option(PROJECT_VERSION_EXTRA "rc beta alpha" "alpha")

  SET(CMAKE_INSTALL_PREFIX ${RUNTIME_OUTPUT_DIRECTORY_RELEASE})

  SET(PROJECT_VERSION "${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}.${PROJECT_BUILD_ID}")
  message(STATUS ${PROJECT_VERSION_MAJOR})
  #SET(CPACK_GENERATOR "TBZ2")
  SET(CPACK_PACKAGE_VERSION_MAJOR "${PROJECT_VERSION_MAJOR}")
  SET(CPACK_PACKAGE_VERSION_MINOR "${PROJECT_VERSION_MINOR}")
  SET(CPACK_PACKAGE_VERSION_PATCH "${PROJECT_VERSION_PATCH}")
  SET(CPACK_PACKAGE_VERSION "${PROJECT_VERSION}")
  SET(CPACK_PACKAGE_VENDOR "${PROJECT_VENDOR}")
  SET(CPACK_PACKAGE_INSTALL_REGISTRY_KEY "${PROJECT_NAME}-${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}-${PROJECT_VERSION_EXTRA}")
  SET(CPACK_RESOURCE_FILE_README "${CMAKE_SOURCE_DIR}/${README_FILE}")
  SET(PROJECT_ICONS_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/package/icon")
  set(LICENSE_FILE "license.rtf")
  set(LICENSE_FILE_EN "license_en.rtf")
  set(LICENSE_FILE_TD "license.rtf")

  IF(CC_BC_WIN)
    #INSTALL(DIRECTORY "${BIN_OUTPUT_DIR}/Release/fonts" DESTINATION .)
    set(CPACK_NSIS_ENABLE_UNINSTALL_BEFORE_INSTALL OFF)
    include(CPackComponent)
    cpack_add_component(vcredist DISPLAY_NAME "Install Visual Studio 2019 Redistributable")
    #cpack_add_component(usbdriver DISPLAY_NAME "Printer USB Drivers")
    cpack_add_component(stlthumb DISPLAY_NAME "STL Thumb Extension")
    INSTALL(DIRECTORY "${CMAKE_SOURCE_DIR}/resources" DESTINATION .)
    install(CODE [[
      file(REMOVE_RECURSE "${CMAKE_INSTALL_PREFIX}/resources/sliceconfig/server_0/orca/default/parampack")
    ]])
    install(CODE [[
      file(REMOVE_RECURSE "${CMAKE_INSTALL_PREFIX}/resources/sliceconfig/server_1/orca/default/parampack")
    ]])
    INSTALL(DIRECTORY "${CMAKE_BINARY_DIR}/resources/sliceconfig/server_0/" DESTINATION resources/sliceconfig/server_0/)
    INSTALL(DIRECTORY "${CMAKE_BINARY_DIR}/resources/sliceconfig/server_1/" DESTINATION resources/sliceconfig/server_1/)
    install(FILES "${CMAKE_BINARY_DIR}/plugins/CrealityUI/CrealityUIRes.rcc" DESTINATION .)
    install(FILES "${CMAKE_SOURCE_DIR}/Creative3D/graphicscard_blacklist.txt" DESTINATION .)
    #install(DIRECTORY ${CMAKE_SOURCE_DIR}/resources/windows
    #    DESTINATION "resources"
    #    COMPONENT "usbdriver"
    #)
    install(FILES ${CMAKE_CURRENT_SOURCE_DIR}/package/runtime/x64/vcredist_x64.exe
      DESTINATION "."
      COMPONENT "vcredist"
    )
    install(FILES ${CMAKE_CURRENT_SOURCE_DIR}/package/runtime/x64/stl-thumb.exe ${CMAKE_CURRENT_SOURCE_DIR}/package/runtime/x64/STLThumbWinShellExtension.dll
      DESTINATION "."
      COMPONENT "stlthumb"
    )
    if(CMAKE_CL_64)
      #SET(CPACK_PACKAGE_FILE_NAME "${PROJECT_NAME}-v${PROJECT_VERSION}-win64-x64-${PROJECT_VERSION_EXTRA}")
      set(CPACK_SYSTEM_NAME "win64")
      #FIND_PROGRAM(VCREDIST_X64 vcredist_x64.exe PATH runtime/x64)
      FILE(GLOB RUNTIME_DLL ${CMAKE_CURRENT_SOURCE_DIR}/package/runtime/x64/*.dll)
      INSTALL(FILES ${RUNTIME_DLL} DESTINATION .)
      #IF(VCREDIST_X64)
      #LIST(APPEND CPACK_NSIS_EXTRA_INSTALL_COMMANDS "ExecWait '\\\"$INSTDIR\\\\vcredist_x64.exe\\\" /q'")
      #ENDIF(VCREDIST_X64)
    else()
      #SET(CPACK_PACKAGE_FILE_NAME "${PROJECT_NAME}-${PROJECT_VERSION}-win32-x86-${PROJECT_VERSION_EXTRA}")
      set(CPACK_SYSTEM_NAME "win32")
      #FIND_PROGRAM(VCREDIST_X86 vcredist_x86.exe PATH runtime/x86)
      #IF(VCREDIST_X86)
      FILE(GLOB RUNTIME_DLL ${CMAKE_CURRENT_SOURCE_DIR}/package/runtime/x86/*.dll ${CMAKE_CURRENT_SOURCE_DIR}/package/runtime/x86/*.exe)
      INSTALL(FILES  ${RUNTIME_DLL} DESTINATION .)
      #LIST(APPEND CPACK_NSIS_EXTRA_INSTALL_COMMANDS "ExecWait '\\\"$INSTDIR\\\\vcredist_x86.exe\\\" /q'")
      #ENDIF(VCREDIST_X86)
    endif()

    SET(CPACK_PACKAGE_EXECUTABLES "${PROJECT_NAME}" "${PROJECT_NAME}")
    SET(CPACK_PACKAGE_INSTALL_DIRECTORY "${DESKTOP_LINK_NAME}")

    SET(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_SOURCE_DIR}/${LICENSE_FILE}")
    SET(CPACK_RESOURCE_FILE_LICENSE_EN "${CMAKE_SOURCE_DIR}/${LICENSE_FILE_EN}")
    SET(CPACK_RESOURCE_FILE_LICENSE_TD "${CMAKE_SOURCE_DIR}/${LICENSE_FILE_TD}")
    SET(CPACK_PACKAGE_ICON "${PROJECT_ICONS_DIRECTORY}\\\\NSISHeader.ico")
    SET(CPACK_PACKAGE_UNICODE "Unicode True") #Multilingual garbled
    
    message(STATUS "packageTest=" ${PACKAGE_TYPE})
    if("${PACKAGE_TYPE}" STREQUAL "")
      message(STATUS "PACKAGE_TYPE null --------" )
      set(PACKAGETYPE "NSIS")
      message(STATUS "set package_type=" ${PACKAGETYPE} )
    else()
      set(PACKAGETYPE ${PACKAGE_TYPE})
    endif()
    if(${PACKAGETYPE} STREQUAL "NSIS")
      message(STATUS "Start NSIS TASK" )
      SET(CPACK_GENERATOR "NSIS")
      if(${PROJECT_VERSION_EXTRA} STREQUAL "Release")
        set(CPACK_NSIS_PACKAGE_NAME "${DESKTOP_LINK_NAME}")
        set(CPACK_NSIS_DISPLAY_NAME "${DESKTOP_LINK_NAME} ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}")
      else()
        set(CPACK_NSIS_PACKAGE_NAME "${DESKTOP_LINK_NAME} ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR} ${PROJECT_VERSION_EXTRA}")
        set(CPACK_NSIS_DISPLAY_NAME "${DESKTOP_LINK_NAME} ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR} ${PROJECT_VERSION_EXTRA}")
      endif()
      if(${PROJECT_VERSION_EXTRA} STREQUAL "Release")
        set(CPACK_NSIS_PROJECT_NAME "${PROJECT_NAME}-${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}")
      else()
        set(CPACK_NSIS_PROJECT_NAME "${PROJECT_NAME}-${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}-${PROJECT_VERSION_EXTRA}")
      endif()
      set(CPACK_NSIS_CXCLOUD_LOCAL_MODEL_DIR "${CXCLOUD_LOCAL_MODEL_DIR}")
      set(CPACK_NSIS_UNINSTALL_LOCAL_MODEL "")

      
      SET(CPACK_NSIS_EXECUTABLES_DIRECTORY ".")
      SET(CPACK_NSIS_MUI_ICON "${PROJECT_ICONS_DIRECTORY}/NSIS.ico")

      SET(CPACK_NSIS_URL_INFO_ABOUT "http://${PROJECT_DOMAIN}")
      SET(CPACK_NSIS_INSTALLED_ICON_NAME "${PROJECT_NAME}${CMAKE_EXECUTABLE_SUFFIX}")
      SET(CPACK_NSIS_MENU_LINKS "${LICENSE_FILE}" "License")
      SET(CPACK_NSIS_MUI_FINISHPAGE_RUN "${CPACK_NSIS_INSTALLED_ICON_NAME}")
      set(CPACK_NSIS_MUI_WELCOMEFINISHPAGE_BITMAP ${PROJECT_ICONS_DIRECTORY}\\\\creality_banner_nsis.bmp)    # note: fails with forward '/'
      set(CPACK_NSIS_MUI_UNWELCOMEFINISHPAGE_BITMAP ${PROJECT_ICONS_DIRECTORY}\\\\creality_banner_nsis.bmp)
      set(PRODUCT_DIR_REGKEY "Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\App Paths\\\\dpinst-x86.exe")
      set(PROGRAM_CMD "$INSTDIR\\\\${PROJECT_NAME}.exe -e %1")
  
      #include

      SET(CPACK_NSIS_ADDITIONAL_SCRIPT "!include 'nsProcess.nsh'")
      
      #SET(CPACK_NSIS_DEFINES "!include 'nsProcess.nsh'")


      #install
      LIST(APPEND CPACK_NSIS_EXTRA_INSTALL_COMMANDS "WriteRegStr HKLM '${PRODUCT_DIR_REGKEY}' '' '$INSTDIR\\\\${PROJECT_NAME}.exe'")


      LIST(APPEND CPACK_NSIS_EXTRA_INSTALL_COMMANDS "CreateDirectory $APPDATA\\\\Creality")
      LIST(APPEND CPACK_NSIS_EXTRA_INSTALL_COMMANDS "CreateDirectory $APPDATA\\\\Creality\\\\Creative3D")
      LIST(APPEND CPACK_NSIS_EXTRA_INSTALL_COMMANDS "CreateDirectory $APPDATA\\\\Creality\\\\Creative3D\\\\resources")
      #LIST(APPEND CPACK_NSIS_EXTRA_INSTALL_COMMANDS "CopyFiles '$INSTDIR\\\\resources\\\\' '$APPDATA\\\\Creative3D\\\\resources'")
      #LIST(APPEND CPACK_NSIS_EXTRA_INSTALL_COMMANDS "CopyFiles '$APPDATA\\\\Creative3D\\\\resources\\\\thirdparty\\\\' '$APPDATA\\\\Creative3D\\\\resources\\\\sliceconfig\\\\orca\\\\default\\\\'")
      LIST(APPEND CPACK_NSIS_EXTRA_INSTALL_COMMANDS "System::Call 'Shell32::SHChangeNotify(i 0x8000000, i 0, i 0, i 0)'")
      
      prepareNSIS_Link("${CPACK_NSIS_DISPLAY_NAME}" "${PROJECT_NAME}" "")
      STRING (REPLACE ";" "\n" CPACK_NSIS_CREATE_ICONS_EXTRA "${CPACK_NSIS_CREATE_ICONS_EXTRA}")
      STRING (REPLACE ";" "\n" CPACK_NSIS_DELETE_ICONS_EXTRA "${CPACK_NSIS_DELETE_ICONS_EXTRA}")
      STRING (REPLACE ";" "\n" CPACK_NSIS_EXTRA_INSTALL_COMMANDS "${CPACK_NSIS_EXTRA_INSTALL_COMMANDS}")

      #unstall
      #LIST(APPEND CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "\${nsProcess::KillProcess} 'Creative3D.exe' $R0")
      #LIST(APPEND CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "Sleep 3000")
      LIST(APPEND CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "SetShellVarContext current")
      LIST(APPEND CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "DeleteRegKey HKCU 'Software\\Creality\\Creative3D\\${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}'")

      LIST(APPEND CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "DeleteRegKey HKCR '.stl'")
      LIST(APPEND CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "DeleteRegKey HKCR '.obj'")
      LIST(APPEND CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "DeleteRegKey HKCR '.cxprj'")
      LIST(APPEND CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "DeleteRegKey HKCR '.gcode'")
      LIST(APPEND CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "DeleteRegKey HKCR '.bmp'")
      LIST(APPEND CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "DeleteRegKey HKCR '.jpg'")
      LIST(APPEND CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "DeleteRegKey HKCR '.png'")
      LIST(APPEND CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "DeleteRegKey HKCR '.gtl'")
      LIST(APPEND CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "DeleteRegKey HKCR '.gbl'")
      LIST(APPEND CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "DeleteRegKey HKCR '.gbo'")
      LIST(APPEND CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "DeleteRegKey HKCR '.gbp'")
      LIST(APPEND CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "DeleteRegKey HKCR '.gbs'")
      LIST(APPEND CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "DeleteRegKey HKCR '.gko'")
      LIST(APPEND CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "DeleteRegKey HKCR '.gml'")
      LIST(APPEND CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "DeleteRegKey HKCR '.gpb'")
      LIST(APPEND CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "DeleteRegKey HKCR '.gpt'")
      LIST(APPEND CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "DeleteRegKey HKCR '.gto'")
      LIST(APPEND CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "DeleteRegKey HKCR '.gtp'")
      LIST(APPEND CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "DeleteRegKey HKCR '.gts'")
      LIST(APPEND CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "DeleteRegKey HKCR '.stp'")
      LIST(APPEND CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "DeleteRegKey HKCR '.step'")
      LIST(APPEND CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "DeleteRegKey HKCR '.dae'")
      LIST(APPEND CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "DeleteRegKey HKCR '.3mf'")
      LIST(APPEND CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "DeleteRegKey HKCR '.3ds'")
      LIST(APPEND CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "DeleteRegKey HKCR '.iges'")
      LIST(APPEND CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "DeleteRegKey HKCR '.wrl'")

      #LIST(APPEND CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "RMDir /r '$APPDATA\\\\Creality\\\\Creative3D'")
      #LIST(APPEND CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "RMDir /r '$LOCALAPPDATA\\\\Creality\\\\Creative3D'")
      LIST(APPEND CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "RMDir /r '$INSTDIR\\\\resources'")
      LIST(APPEND CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "SetShellVarContext all")
      LIST(APPEND CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "Delete '$INSTDIR\\\\*.csv'")
      LIST(APPEND CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "Delete '$INSTDIR\\\\*_show'")
      STRING (REPLACE ";" "\n" CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS "${CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS}")
      set(CPACK_NSIS_INSTALLER_MUI_FINISHPAGE_RUN_CODE "!define MUI_FINISHPAGE_RUN \\\"$WINDIR\\\\explorer.exe\\\"\n!define MUI_FINISHPAGE_RUN_PARAMETERS \\\"$INSTDIR\\\\${PROJECT_NAME}.exe\\\"")
    else()
      #zip cpack start
      #set package_Name
      message(STATUS "Start ZIP_Package TASK" )
      set(CPACK_GENERATOR "ZIP")
      if(${PROJECT_VERSION_EXTRA} STREQUAL "Release")
        set(CPACK_PACKAGE_NAME "${PROJECT_NAME}-${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}")
      else()
        set(CPACK_PACKAGE_NAME "${PROJECT_NAME}-${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}-${PROJECT_VERSION_EXTRA}")
      endif()
      SET(CPACK_PACKAGE_VERSION "${PROJECT_VERSION}")
      
    endif()
      #zip cpack end
  ELSEIF(CC_BC_MAC)
    include(package/macx)
  ELSEIF(CC_BC_LINUX)
    include(package/linux)
  ENDIF()

  # install MSVC redistributables and files listed in CMAKE_INSTALL_DEBUG_LIBRARIES
  set(CPACK_PACKAGE_FILE_NAME "${CPACK_FILE_NAME_NO_SPACES}-v${PROJECT_VERSION}-${CPACK_SYSTEM_NAME}-${PROJECT_VERSION_EXTRA}")
  set(SIGN_CPACK_PACKAGE_FILE_NAME ${CPACK_PACKAGE_FILE_NAME})
  INCLUDE(CPack)
ENDIF()

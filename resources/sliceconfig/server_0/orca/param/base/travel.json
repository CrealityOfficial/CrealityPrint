{
	"retraction_enable":
	{
		"label": "Enable Retraction",
		"description": "Retract the filament when the nozzle is moving over a non-printed area. ",
		"type": "bool",
		"default_value": "true",
		"parameter_level": "1",
		"settable_per_mesh": false,
		"settable_per_extruder": true
	},
	"retraction_wipe":
	{
		"label": "Retraction Wipe",
		"description": "Wipe the nozzle when retraction. ",
		"type": "bool",
		"default_value": "false",
		"parameter_level": "1",
		"settable_per_mesh": false,
		"settable_per_extruder": true
	},
	"wipe_length":
	{
		"label": "Wipe length",
		"description": "Wipe the length of the nozzle when retraction.",
		"unit": "mm",
		"type": "float",
		"default_value": "2",
		"minimum_value": "0.0001",
		"maximum_value": "10",
		"minimum_value_warning": "1",
		"maximum_value_warning": "5",
		"enabled": "eval(contex.value(\"retraction_wipe\"))",
		"parameter_level": "2",
		"settable_per_mesh": false,
		"settable_per_extruder": true
	},
	"before_wipe_retraction_amount_percent":
	{
		"label": "Before Wipe Retraction Amount Percent",
		"description": "before wipe retraction amount percent.",
		"unit": "%",
		"type": "float",
		"default_value": "70",
		"minimum_value": "1",
		"maximum_value": "100",
		"minimum_value_warning": "10",
		"maximum_value_warning": "100",
		"enabled": "eval(contex.value(\"retraction_wipe\"))",
		"parameter_level": "2",
		"settable_per_mesh": false,
		"settable_per_extruder": true
	},
	"retract_at_layer_change":
	{
		"label": "Retract at Layer Change",
		"description": "Retract the filament when the nozzle is moving to the next layer.",
		"type": "bool",
		"default_value": "false",
		"parameter_level": "2",
		"settable_per_mesh": true,
		"enabled": "eval(contex.value(\"retraction_enable\"))",
		"settable_per_extruder": true
	},
	"retraction_amount":
	{
		"label": "Retraction Distance",
		"description": "The length of material retracted during a retraction move.",
		"unit": "mm",
		"type": "float",
		"default_value": "8.0",
		"minimum_value_warning": "-0.0001",
		"maximum_value_warning": "50.0",
		"parameter_level": "2",
		"enabled": "eval(contex.value(\"retraction_enable\")) && getEnumValue(\"machine_gcode_flavor\") != 'UltiGCode'",
		"settable_per_mesh": false,
		"settable_per_extruder": true
	},
	"retraction_speed":
	{
		"label": "Retraction Speed",
		"description": "The speed at which the filament is retracted and primed during a retraction move.",
		"unit": "mm/s",
		"type": "float",
		"default_value": "60",
		"minimum_value": "0.0001",
		"minimum_value_warning": "1",
		"maximum_value": "200",
		"maximum_value_warning": "100",
		"parameter_level": "-2",
		"enabled": "eval(contex.value(\"retraction_enable\")) && getEnumValue(\"machine_gcode_flavor\") != 'UltiGCode'",
		"settable_per_mesh": false,
		"settable_per_extruder": true
	},
	"retraction_retract_speed":
	{
		"label": "Retraction Retract Speed",
		"description": "The speed at which the filament is retracted during a retraction move.",
		"unit": "mm/s",
		"type": "float",
		"default_value": "60",
		"minimum_value": "0.0001",
		"maximum_value": "200",
		"minimum_value_warning": "1",
		"maximum_value_warning": "100",
		"enabled": "eval(contex.value(\"retraction_enable\")) && getEnumValue(\"machine_gcode_flavor\") != 'UltiGCode'",
		"value": "eval(contex.value(\"retraction_speed\"))",
		"parameter_level": "2",
		"settable_per_mesh": false,
		"settable_per_extruder": true
	},
	"retraction_prime_speed":
	{
		"label": "Retraction Prime Speed",
		"description": "The speed at which the filament is primed during a retraction move.",
		"unit": "mm/s",
		"type": "float",
		"default_value": "60",
		"minimum_value": "0.0001",
		"maximum_value": "200",
		"minimum_value_warning": "1",
		"maximum_value_warning": "100",
		"enabled": "eval(contex.value(\"retraction_enable\")) && getEnumValue(\"machine_gcode_flavor\") != 'UltiGCode'",
		"value": "eval(contex.value(\"retraction_speed\"))",
		"parameter_level": "2",
		"settable_per_mesh": false,
		"settable_per_extruder": true
	},
	"retraction_extra_prime_amount":
	{
		"label": "Retraction Extra Prime Amount",
		"description": "Some material can ooze away during a travel move, which can be compensated for here.",
		"unit": "mmÂ³",
		"type": "float",
		"default_value": "0",
		"minimum_value_warning": "-10",
		"maximum_value_warning": "5.0",
		"parameter_level": "2",
		"enabled": "eval(contex.value(\"retraction_enable\"))",
		"settable_per_mesh": false,
		"settable_per_extruder": true
	},
	"retraction_min_travel":
	{
		"label": "Retraction Minimum Travel",
		"description": "The minimum distance of travel needed for a retraction to happen at all. This helps to get fewer retractions in a small area.",
		"unit": "mm",
		"type": "float",
		"default_value": "1.5",
		"value": "eval(contex.value(\"line_width\")) * 2",
		"minimum_value": "0",
		"minimum_value_warning": "eval(contex.value(\"line_width\")) * 1.5",
		"maximum_value_warning": "10",
		"parameter_level": "2",
		"settable_per_mesh": false,
		"settable_per_extruder": true
	},
	"retraction_count_max":
	{
		"label": "Maximum Retraction Count",
		"description": "This setting limits the number of retractions occurring within the minimum extrusion distance window. Further retractions within this window will be ignored. This avoids retracting repeatedly on the same piece of filament, as that can flatten the filament and cause grinding issues.",
		"default_value": "100",
		"minimum_value": "0",
		"maximum_value_warning": "100",
		"type": "int",
		"enabled": "eval(contex.value(\"retraction_enable\"))",
		"settable_per_mesh": false,
		"parameter_level": "2",
		"settable_per_extruder": true
	},
	"retraction_extrusion_window":
	{
		"label": "Minimum Extrusion Distance Window",
		"description": "The window in which the maximum retraction count is enforced. This value should be approximately the same as the retraction distance, so that the number of times a retraction passes the same patch of material can be effectively limited.",
		"unit": "mm",
		"type": "float",
		"default_value": "2",
		"minimum_value": "0",
		"maximum_value_warning": "eval(contex.value(\"retraction_amount\")) * 2",
		"value": "eval(contex.value(\"retraction_amount\"))",
		"enabled": "eval(contex.value(\"retraction_enable\"))",
		"settable_per_mesh": false,
		"parameter_level": "2",
		"settable_per_extruder": true
	},
	"retraction_hop_enabled": {
		"label": "Z Hop When Retracted",
		"description": "Whenever a retraction is done, the build plate is lowered to create clearance between the nozzle and the print. It prevents the nozzle from hitting the print during travel moves, reducing the chance to knock the print from the build plate.",
		"type": "bool",
		"default_value": "false",
		"parameter_level": "1",
		"enabled": "eval(contex.value(\"retraction_enable\"))",
		"settable_per_mesh": false,
		"settable_per_extruder": true
	},
	"retraction_hop_only_when_collides": {
		"label": "Z Hop Only Over Printed Parts",
		"description": "Only perform a Z Hop when moving over printed parts which cannot be avoided by horizontal motion by Avoid Printed Parts when Traveling.",
		"type": "bool",
		"default_value": "false",
		"parameter_level": "2",
		"enabled": "eval(contex.value(\"retraction_enable\")) && eval(contex.value(\"retraction_hop_enabled\")) && eval(contex.value(\"travel_avoid_other_parts\"))",
		"settable_per_mesh": false,
		"settable_per_extruder": true
	},
	"retraction_hop": {
		"label": "Z Hop Height",
		"description": "The height difference when performing a Z Hop.",
		"unit": "mm",
		"type": "float",
		"default_value": "0.2",
		"minimum_value_warning": "0",
		"maximum_value_warning": "10",
		"parameter_level": "2",
		"enabled": "eval(contex.value(\"retraction_enable\")) && eval(contex.value(\"retraction_hop_enabled\"))",
		"settable_per_mesh": false,
		"settable_per_extruder": true
	},
	"retraction_hop_type":
	{
		"label": "Retraction Z Hop Type",
		"description": "Z Hop Type when retraction ",
		"type": "enum",
		"options":
		{
			"directlift": "DirectLift",
			"spirallift": "SpiralLift",
			"trapezoidalleft": "TrapezoidalLeft"
		},
		"default_value": "DirectLift",
		"parameter_level": "2",
		"enabled": "eval(contex.value(\"retraction_enable\")) && eval(contex.value(\"retraction_hop_enabled\"))",
		"settable_per_mesh": false,
		"settable_per_extruder": true
	},
	"retraction_hop_after_extruder_switch": {
		"label": "Z Hop After Extruder Switch",
		"description": "After the machine switched from one extruder to the other, the build plate is lowered to create clearance between the nozzle and the print. This prevents the nozzle from leaving oozed material on the outside of a print.",
		"type": "bool",
		"default_value": "true",
		"enabled": "eval(contex.value(\"retraction_hop_enabled\")) && eval(contex.value(\"extruders_enabled_count\")) > 1",
		"parameter_level": "2",
		"settable_per_mesh": false,
		"settable_per_extruder": true
	},
	"retraction_hop_after_extruder_switch_height": 
	{
		"label": "Z Hop After Extruder Switch Height",
		"description": "The height difference when performing a Z Hop after extruder switch.",
		"unit": "mm",
		"type": "float",
		"default_value": "1",
		"value": "eval(contex.value(\"retraction_hop\"))",
		"minimum_value_warning": "0",
		"maximum_value_warning": "10",
		"enabled": "eval(contex.value(\"retraction_enable\")) && eval(contex.value(\"retraction_hop_after_extruder_switch\")) && eval(contex.value(\"extruders_enabled_count\")) > 1",
		"settable_per_mesh": false,
		"settable_per_extruder": true
	}
}
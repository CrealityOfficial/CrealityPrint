
function(__collect_assign_source_group)
	#message(STATUS "__collect_assign_source_group : ${ARGN}")
    foreach(source IN ITEMS ${ARGN})
		#message(STATUS "__collect_assign_source_group item: ${source}")
        if (IS_ABSOLUTE ${source})
            #message(WARNING "__collect_assign_source_group must be relative path.")
			string(REPLACE "${CMAKE_CURRENT_SOURCE_DIR}/" "" out "${source}")
			#message(STATUS "${source}  ----> ${out}")
			set(source ${out})
        endif()
        get_filename_component(SOURCE_PATH ${source} PATH)
        string(REPLACE "/" "\\" SOURCE_PATH_GROUP "${SOURCE_PATH}")
				
        source_group("${SOURCE_PATH_GROUP}" FILES "${source}")
    endforeach()
endfunction()

function(__collect_source_tree_from_directory SOURCE_VAR)
	cmake_parse_arguments(COLLECT "" "" "FILTERS;EXCLUDE" ${ARGN})
	if(NOT COLLECT_FILTERS)
		set(COLLECT_FILTERS ${COLLECT_FILTER_SOURCE_ALL})
	endif()
	
	file(GLOB_RECURSE FILES_VAR RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} ${COLLECT_FILTERS})
	
	set(USED_FILTERS "win32-build/.*" "ninja-build/.*" "linux-build/.*" "cmake/.*")
	set(FINAL_FILES)
	if(COLLECT_EXCLUDE)
		list(APPEND USED_FILTERS ${COLLECT_EXCLUDE})
	endif()
	__filter_string_list(FILES_VAR USED_FILTERS FINAL_FILES)

	#message(STATUS "__collect_assign_source_group : ${FINAL_FILES}")
	
	__collect_assign_source_group(${FINAL_FILES})
	set(${SOURCE_VAR} ${FINAL_FILES} PARENT_SCOPE)
endfunction()

function(__collect_qt_ui SOURCE_VAR)
	if(QT5_ENABLED)
		file(GLOB_RECURSE FILES_VAR RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.ui")
		
		#message(STATUS "__collect_qt_ui : ${FILES_VAR}")
		qt5_wrap_ui(UI_VAR ${FILES_VAR})
		source_group("qtui" FILES ${UI_VAR} ${FILES_VAR})
		set(${SOURCE_VAR} ${UI_VAR} PARENT_SCOPE)
	else()
		message(WARNING "__collect_qt_ui without qt enabled.")
	endif()
endfunction()

function(__collect_qt_qrc SOURCE_VAR)
	if(QT5_ENABLED)
		file(GLOB_RECURSE FILES_VAR RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "*.qrc")
		
		#message(STATUS "__collect_qt_qrc : ${FILES_VAR}")
		qt5_add_resources(QRC_VAR ${FILES_VAR})
		source_group("qtqrc" FILES ${QRC_VAR} ${FILES_VAR})
		set(${SOURCE_VAR} ${QRC_VAR} PARENT_SCOPE)
	else()
		message(WARNING "__collect_qt_qrc without qt enabled.")
	endif()
endfunction()